/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
//package ui.MainFoodStore;
//
//import Business.EcoSystem;
//import Business.Enterprise.Enterprise;
//import Business.Organization.FoodStoreOrganization;
//import Business.UserAccount.UserAccount;
//import ui.Coordinator.*;
//import Business.WorkQueue.FoodWorkRequest;
//import java.awt.CardLayout;
//import javax.swing.JPanel;
//import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Akass
 */
public class MainFoodStoreJPanel extends javax.swing.JPanel {

    /**
     * Creates new form MainFoodStore
     */
    
//    private JPanel userProcessContainer;
//    private EcoSystem business;
//    private UserAccount userAccount;
//    private Enterprise enterprise;
//    private FoodStoreOrganization organization;
    
//    public MainFoodStoreJPanel(JPanel userProcessContainer, UserAccount account, FoodStoreOrganization organization, Enterprise enterprise) {
//    initComponents();
//    this.userProcessContainer = userProcessContainer;
//    this.userAccount = account; // Store the user account if needed
//    this.organization = organization;
//    this.enterprise = enterprise;
//    populateDeliveredTable();
//}
    
    public void populateDeliveredTable() {
        
//         DefaultTableModel model = (DefaultTableModel) deliveredFoodTable.getModel();
//    model.setRowCount(0);
//
//    for (FoodWorkRequest request : organization.getFoodWorkQueue().getFoodDeliveredList()) {
//        Object[] row = new Object[4];
//        row[0] = request.getMessage();
//        row[1] = request.getSender().getEmployee().getName();
//        row[2] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
//        row[3] = request.getStatus();
//
//        model.addRow(row);
//    }
    }
    
//    public static void addDeliveredRequest(FoodWorkRequest request) {
//        DefaultTableModel model = (DefaultTableModel) deliveredFoodTable.getModel();
//        Object[] row = new Object[4];
//        row[0] = request.getMessage();
//        row[1] = request.getSender().getEmployee().getName();
//        row[2] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
//        row[3] = request.getStatus();
//        model.addRow(row);
//    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        deliveredFoodTable = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();

        deliveredFoodTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Message", "Sender", "Receiver", "Status"
            }
        ));
        jScrollPane1.setViewportView(deliveredFoodTable);

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBack))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(118, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
//         CardLayout layout = (CardLayout) userProcessContainer.getLayout();
//        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JTable deliveredFoodTable;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
